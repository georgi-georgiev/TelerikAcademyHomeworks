@model IEnumerable<ASP.NET_MVC_KENDO.ViewModels.BookViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@(Html.Kendo()
    .Grid(Model)
    .Name("grid")
    .Columns(columns =>
        {
            columns.AutoGenerate(true);
            columns.Command(cmd => { cmd.Edit(); cmd.Destroy(); });
        })
        .ToolBar(toolbar =>
        {
            
            toolbar.Create();
            @*toolbar.Template(@<text>
               <div class="toolbar">
                   @(Html.Kendo().DropDownList()
                            .Name("categories")
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .AutoBind(false)
                            .Events(e => e.Change("categoriesChange"))
                            .DataSource(ds =>
                            {
                                ds.Read("ToolbarTemplate_Categories", "Categories");
                            })
) 
                </div>
            </text>);*@
        })
        .Pageable()
        .Sortable()
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
        .Editable(edit => edit.Mode(GridEditMode.PopUp))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(b => b.Id))
            .PageSize(5)
            .ServerOperation(true)
            .Create("CreateBooks", "Books")
            .Read("ReadBooks", "Books")
            .Update("UpdateBooks", "Books")
            .Destroy("DeleteBooks", "Books")
            )
)
<script>
    function categoriesChange() {
        var value = this.value(),
		 	 grid = $("#grid").data("kendoGrid");

        if (value) {
            grid.dataSource.filter({ field: "Id", operator: "eq", value: parseInt(value) });
        } else {
            grid.dataSource.filter({});
        }
    }
</script>